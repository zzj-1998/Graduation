(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
const ExplainScreen_1 = require("./script/screen/ExplainScreen");
const GameScreen_1 = require("./script/screen/GameScreen");
const HomeScreen_1 = require("./script/screen/HomeScreen");
const TransitionWnd_1 = require("./script/wnd/TransitionWnd");
/*
* 游戏初始化配置;
*/
class GameConfig {
    constructor() { }
    static init() {
        var reg = Laya.ClassUtils.regClass;
        reg("script/screen/ExplainScreen.ts", ExplainScreen_1.default);
        reg("script/screen/GameScreen.ts", GameScreen_1.default);
        reg("script/screen/HomeScreen.ts", HomeScreen_1.default);
        reg("script/wnd/TransitionWnd.ts", TransitionWnd_1.default);
    }
}
exports.default = GameConfig;
GameConfig.width = 1334;
GameConfig.height = 750;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "game/home.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;
GameConfig.init();
},{"./script/screen/ExplainScreen":5,"./script/screen/GameScreen":6,"./script/screen/HomeScreen":7,"./script/wnd/TransitionWnd":18}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GameConfig_1 = require("./GameConfig");
class Main {
    constructor() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    onVersionLoaded() {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    }
    onConfigLoaded() {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    }
}
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
module.exports={"primaryKey":"id","langKeys":[],"list":[{"id":1,"wall":0,"prop":0,"door":0,"monster":0,"npc":0,"way":1,"floor":0,"icon":"Way_1"},{"id":2,"wall":1,"prop":0,"door":0,"monster":0,"npc":0,"way":0,"floor":0,"icon":"Wall_1"},{"id":3,"wall":2,"prop":0,"door":0,"monster":0,"npc":0,"way":0,"floor":0,"icon":"Wall_2"},{"id":4,"wall":3,"prop":0,"door":0,"monster":0,"npc":0,"way":0,"floor":0,"icon":"Wall_3"},{"id":5,"wall":4,"prop":0,"door":0,"monster":0,"npc":0,"way":0,"floor":0,"icon":"Wall_4"}]}
},{}],4:[function(require,module,exports){
module.exports={"primaryKey":"layer","langKeys":[],"list":[{"layer":0,"map":[2,4,4,4,4,1,4,4,4,4,2,2,4,4,4,4,1,4,4,4,4,2,2,4,4,4,4,1,4,4,4,4,2,2,4,4,4,4,1,4,4,4,4,2,2,4,4,4,4,1,4,4,4,4,2,2,4,4,4,4,1,4,4,4,4,2,2,2,4,4,4,1,4,4,4,2,2,2,2,2,2,2,1,2,2,2,2,2,5,2,5,2,1,1,1,2,5,2,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,1,5,5,5,5,5],"character":[104,16],"npc":[92,1],"door":[82,1],"monster":[],"prop":[],"floor":[5,-1]},{"layer":1,"map":[1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,1,2,1,2,2,1,2,2,2,1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1,2,2,2,2,2,1,2,1,2,2,1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,1,2,1,1,1,2,1,1,1,2,1,1,1,1,1,1,2,1,1,1,2,1,1,1],"character":[104,1],"npc":[],"door":[93,3,97,1,78,1,45,1,25,1,60,1],"monster":[3,1,4,2,5,1,52,3,108,32,63,9,62,1,61,14,24,5,34,5,56,6,89,6],"prop":[2,1,22,4,28,4,29,1,30,4,33,1,35,6,39,4,40,1,41,4,55,1,66,7,68,2,99,4,100,5,101,1,103,3,107,1,109,2,110,4,112,1,118,1,119,1,120,1],"floor":[0,115]},{"layer":2,"map":[1,2,1,1,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,2,2,2,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,2,2,1,2,2,1,2,2,1,1,1,1,1,1,2,1,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2],"character":[11,99],"npc":[],"door":[42,1,51,1,57,1,60,1,63,1,79,1,82,2],"monster":[3,27,31,26,74],"prop":[6,6,7,7,8,1,9,3,13,7,15,5,17,6,18,7,19,1,20,2,24,1,26,1,28,6,29,7,30,1,35,1,37,1,90,1,92,5,93,4,101,1,103,5,104,4,112,6,114,5,115,4],"floor":[110,0]},{"layer":3,"map":[1,1,1,2,1,1,1,2,2,2,2,1,1,1,2,1,1,1,2,1,1,1,1,1,1,2,2,1,2,2,1,2,1,2,1,2,2,1,1,1,2,1,2,1,1,1,1,2,2,2,1,2,1,2,1,1,2,1,1,1,1,1,2,1,2,1,1,2,2,2,2,2,1,1,1,2,1,1,1,1,1,1,2,2,1,2,2,1,2,2,2,2,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,2,1,1,1,2,2,2,2,1,1,1,2,1],"character":[111,109],"npc":[],"door":[27,1,34,1,84,1],"monster":[1,2,11,2,20,9,23,5,38,5,43,2,54,9,55,1,58,9,59,2,60,9,65,2,66,1,92,9,94,2,96,2,106,9],"prop":[2,1,12,1,22,1,41,1,52,1,63,1,105,7,107,1,116,6,117,5,118,1],"floor":[120,110]},{"layer":4,"map":[1,1,1,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,2,2,1,2,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,2,2,1,2,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,2,2,1,2,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,1,2,1,1,1,1,1,1,1,2,1],"character":[109,99],"npc":[],"door":[11,1,13,1,19,1,21,1,60,3,93,2],"monster":[1,3,9,3,35,5,37,10,38,11,39,10,41,5,44,9,49,10,54,9,55,9,65,9,66,2,70,32,71,17,72,32,76,2,82,32,113,3,117,3],"prop":[46,4,48,7,50,7,52,4,57,4,63,4,81,6,83,6,103,1,105,1],"floor":[110,120]},{"layer":5,"map":[1,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,2,2,1,2,2,1,1,1,2,1,1,2,1,1,1,1,1,2,1,2,2,2,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,2,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,1,1,2,1,1,1,1,1,1,2,1,2,1,2],"character":[99,108],"npc":[],"door":[30,1,34,1,93,1,95,2,97,1,107,1],"monster":[5,14,8,14,15,14,20,14,22,10,26,6,35,14,38,6,41,32,42,6,44,10,54,6,60,9,61,5,69,3,80,3,85,32,86,17,91,9,104,9,112,9],"prop":[2,4,4,5,9,1,10,2,13,6,21,1,55,6,66,7,106,7,117,1],"floor":[119,110]},{"layer":6,"map":[1,1,2,1,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,2,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,2,2,2,1,2,1,2,1,2,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,2],"character":[108,103],"npc":[],"door":[24,2,26,2,47,3,53,1,80,1,90,1,92,1,97,2,116,1,117,1],"monster":[1,7,6,4,11,7,18,4,20,34,23,11,27,11,32,34,36,17,42,21,57,19,63,19,79,10,81,10,101,10],"prop":[3,7,5,1,9,5,10,5,12,1,14,6,17,1,21,5,22,1,29,1,59,1,60,1,61,1],"floor":[114,119]},{"layer":7,"map":[1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,2,1,2,1,1,2,2,2,1,1,1,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,2,2,2,2,1,1,2,1,1,2,1,2,1,1,2,1,1,2,1,1,2,1,2,1,1,2,1,1,2,2,1,1,1,1,1,2,2,1,1,1,2,2,2,1,2,2,2,1,1,2,1,1,1,1,1,1,1,1,1,2],"character":[115,1],"npc":[],"door":[16,2,46,2,52,2,82,2,104,3,113,1,117,1],"monster":[14,11,18,7,24,11,27,30,30,7,47,30,51,30,71,30],"prop":[25,7,29,6,68,4,69,6,73,7,74,4,79,1,80,4,84,4,85,1,91,2,92,2,93,5,94,2,95,2],"floor":[0,114]},{"layer":8,"map":[1,2,1,1,1,1,2,1,1,1,1,1,2,1,2,2,1,2,1,2,2,1,1,2,1,2,1,1,1,1,1,2,1,1,2,1,2,1,2,2,2,1,2,1,1,2,1,2,1,2,1,1,1,2,1,1,2,1,2,1,2,2,2,2,2,1,1,2,1,2,1,1,1,2,1,1,1,1,2,1,2,2,2,1,2,1,2,2,1,2,1,1,1,2,1,2,1,1,1,1,2,2,2,1,2,1,2,2,2,1,1,1,1,1,1,2,1,1,1,1,1],"character":[11,51],"npc":[],"door":[16,1,18,1,28,2,85,1,103,1],"monster":[9,7,37,20,41,10,43,3,44,10,54,3,55,11,66,10,68,3,75,11,79,3,83,17,91,7,94,7,112,20,117,4,118,30,119,4],"prop":[8,1,32,6,48,4,57,7,59,4],"floor":[50,0]},{"layer":9,"map":[1,1,1,2,2,2,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,2,1,2,2,1,2,2,2,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,2,1,2,2,2,1,2,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,2,1,1,1,1,1,2,1,1,1,1,2,2,1,2,2,1,2,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,1],"character":[39,83],"npc":[],"door":[14,1,20,1,23,1,47,3,56,2,78,1,84,1,93,2,108,1,113,1],"monster":[13,33,21,7,67,21,70,20,88,7,90,7,100,7,103,34,104,20,105,34,109,7,112,7,115,34],"prop":[1,1,11,1,32,1,43,1,54,4,66,7,68,6,76,4,87,1,89,4,98,1,99,2,101,4,111,2,114,5,116,5],"floor":[72,50]},{"layer":10,"map":[1,2,2,1,1,2,1,1,2,2,1,1,1,2,2,1,2,1,2,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,1,2,2,2,2,2,1,2,2,1,2,1,1,1,1,1,1,1,2,1,1,2,1,2,2,2,2,1,2,2,1,1,2,1,1,1,1,2,1,1,1,1,1,2,2,2,2,2,2,1,2,2,1,1,2,1,1,1,2,1,1,1,2,1,1,2,1,1,1,1,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,1],"character":[70,99],"npc":[],"door":[15,1,17,1,62,1,74,1,84,1,104,3],"monster":[4,33,6,33,21,21,31,21,44,10,55,11,66,10,75,11,95,11,105,20,107,20],"prop":[3,7,7,6,32,5,48,1,49,1,50,1,54,1,65,1,90,4,91,7,92,6,98,1,101,4,102,7,103,6,109,1,112,4,113,7,114,6,116,2,118,2,120,4],"floor":[110,71]},{"layer":11,"map":[1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,2,1,2,1,1,1,1,1,2,1,1,1,1,1,1,2,2,1,2,2,2,1,2,2,1,1,2,1,1,1,1,1,1,1,2,1,1,2,1,2,2,2,2,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,2,1,2,1,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,1,1],"character":[111,119],"npc":[],"door":[33,1,35,1,37,1,39,1,42,2,55,1,58,2,62,2,65,1,101,3,107,3],"monster":[19,16,20,15,21,16,31,16,69,16,71,18,73,16,79,33,85,33,90,33,96,33],"prop":[0,4,2,1,4,2,6,3,8,5,10,5,11,4,13,1,15,2,17,3,22,4,24,1,26,2,28,3,66,7,70,5,72,5,76,6,77,7,87,6,88,7,98,6,103,4,105,4],"floor":[120,110]},{"layer":12,"map":[1,1,2,1,1,1,1,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,1,1,1,1,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1],"character":[119,111],"npc":[],"door":[16,1,56,2,64,2,90,1,96,1,104,2],"monster":[4,26,5,27,6,26,27,27,34,18,42,13,44,18,45,28,53,25,54,13,89,18,91,16,92,16,93,15,94,16,95,16,97,18],"prop":[1,7,9,5,11,6,21,5,38,1,49,1,60,4,71,4,88,7,98,6],"floor":[110,120]},{"layer":13,"map":[1,1,1,1,1,1,1,2,1,1,1,1,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,1,1,2,1,2,1,1,2,1,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,1,1,2,2,2,2,2,1,2,1,2,1,1,1,1,2,1,1,1,1,1,2,1,2,2,1,2,1,2,2,2,2,2,1,1,1,1,1,1,1,2,1,1,1,1],"character":[111,114],"npc":[],"door":[17,1,35,3,113,2,119,1],"monster":[1,18,9,28,26,16,44,26,48,28,50,16,55,27,58,8,61,15,66,26,68,28,72,16,89,26,95,28,118,8],"prop":[33,5,52,6,63,6,74,6,76,7,87,7,98,7,103,5],"floor":[115,110]},{"layer":14,"map":[2,1,1,1,1,1,1,1,1,1,2,2,1,1,2,2,2,2,2,1,1,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,2,2,2,1,2,2,1,2,2,2,1,2,2,2,1,2,2,1,1,2,2,1,2,2,1,1,2,2,1,4,4,2,1,2,4,4,1,2,2,1,4,4,2,1,2,4,4,1,2,2,1,4,4,2,1,2,4,4,1,2,2,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,1,2,2,2,2,2],"character":[104,5],"npc":[],"door":[93,2,103,2,105,2],"monster":[2,13,60,28,71,8,82,28,100,16,101,15,102,16,106,16,107,15,108,16],"prop":[13,5,19,5,57,4,63,4],"floor":[4,115]},{"layer":15,"map":[1,1,1,1,1,4,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,1,1,4,4,2,2,2,2,2,4,4,1,1,4,2,2,1,2,1,2,2,4,1,1,4,2,2,1,2,1,2,2,4,1,1,4,2,2,1,2,1,2,2,4,1,1,4,4,2,1,2,1,2,4,4,1,1,4,4,2,1,2,1,2,4,4,1,1,4,4,4,1,1,1,4,4,4,1,1,4,4,4,4,1,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1],"character":[3,7],"npc":[],"door":[81,1,83,1,104,3],"monster":[],"prop":[48,7,50,7,59,6,61,6],"floor":[6,4]},{"layer":16,"map":[4,4,4,4,4,1,1,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4,4,4,4,2,1,2,4,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,4,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"character":[5,71],"npc":[],"door":[38,3],"monster":[60,22],"prop":[],"floor":[82,6]},{"layer":17,"map":[4,1,1,1,1,1,1,1,1,1,1,4,1,4,4,4,4,4,4,4,4,1,4,1,4,1,1,1,1,1,1,1,1,4,1,4,1,4,4,4,4,4,4,4,4,1,4,1,4,1,1,1,1,1,4,4,1,4,1,1,1,4,4,4,1,4,4,1,4,4,4,4,4,1,1,1,4,4,1,4,4,4,1,4,1,4,4,4,4,1,1,1,1,1,4,1,1,1,1,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1],"character":[93,111],"npc":[],"door":[],"monster":[1,13,2,8,10,13,12,8,25,13,32,13,49,13,53,13,58,13,73,13,75,13,78,8,89,13,90,8,92,35,95,13,98,13,112,35,120,13],"prop":[],"floor":[110,82]},{"layer":18,"map":[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,2,4,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,2,2,1,2,2,4,4,4,4,4,4,4,2,1,2,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1],"character":[111,119],"npc":[],"door":[71,3,82,3],"monster":[],"prop":[],"floor":[120,110]},{"layer":19,"map":[1,1,1,1,1,1,1,1,1,1,1,1,4,1,4,4,4,4,4,1,4,1,1,4,1,4,4,4,4,4,1,4,1,1,4,1,4,4,1,4,4,1,4,1,1,4,1,4,4,1,4,4,1,4,1,1,4,1,4,4,1,4,4,1,4,1,1,4,1,4,4,1,4,4,1,4,1,1,4,1,4,4,1,4,4,1,4,1,1,4,4,4,4,1,4,4,4,4,1,1,4,4,4,4,1,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1],"character":[119,49],"npc":[],"door":[],"monster":[57,22,63,22,71,12],"prop":[],"floor":[38,120]},{"layer":20,"map":[1,1,1,1,1,1,1,1,1,1,1,1,4,1,4,1,4,1,4,1,4,1,4,1,1,1,1,1,1,1,1,1,4,1,4,1,4,1,1,1,4,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,4,1,4,1,4,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,4,1,1,1,4,1,4,1,4,1,1,1,1,1,1,1,1,1,4,1,4,1,4,1,4,1,4,1,4,1,1,1,1,1,1,1,1,1,1,1,1],"character":[49],"npc":[],"door":[],"monster":[0,35,2,30,4,8,6,8,8,30,10,35,24,30,26,13,28,13,30,30,44,8,46,13,52,13,54,8,66,8,68,13,74,13,76,8,90,30,92,13,94,13,96,30,110,35,112,30,114,8,116,8,118,30,120,35],"prop":[1,6,3,4,5,3,7,4,9,6,11,5,13,1,15,2,17,2,19,1,21,5,23,7,31,7,33,4,35,1,41,1,43,4,45,2,53,2,55,3,65,3,67,2,75,2,77,4,79,1,85,1,87,4,89,7,97,7,99,5,101,1,103,2,105,2,107,1,109,5,111,6,113,4,115,3,117,4,119,6],"floor":[82,38]},{"layer":21,"map":[4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,4,1,4,1,1,4,4,4,1,1,4,4,1,4,4,1,1,4,4,1,1,1,4,1,4,1,1,1,4,4,4,1,1,1,1,1,1,1,4,4,4,4,1,1,1,1,1,1,1,4,4,4,4,4,1,1,4,1,1,4,4,4,4,4,4,4,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"character":[60],"npc":[],"door":[],"monster":[16,12,27,25,38,25],"prop":[],"floor":[]}]}
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../ui/layaMaxUI");
const UI_ExplainScreen_1 = require("../../ui/Main/UI_ExplainScreen");
class ExplainScreen extends layaMaxUI_1.ui.game.explainUI {
    constructor() {
        super();
        var res = [
            { url: "res/UI/Main_atlas0.png", type: Laya.Loader.IMAGE },
            { url: "res/UI/Main.bin", type: Laya.Loader.BUFFER }
        ];
        Laya.loader.load(res, Laya.Handler.create(this, this.init));
    }
    init() {
        fairygui.UIPackage.addPackage("res/UI/Main");
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        this._view = fairygui.UIPackage.createObjectFromURL(UI_ExplainScreen_1.default.URL, UI_ExplainScreen_1.default);
        this._view.makeFullScreen();
        fairygui.GRoot.inst.addChild(this._view);
        this._view.m_btnClose.onClick(this, this._home);
    }
    _home() {
        Laya.Scene.open("game/home.scene", true);
    }
}
exports.default = ExplainScreen;
},{"../../ui/Main/UI_ExplainScreen":22,"../../ui/layaMaxUI":69}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../ui/layaMaxUI");
const UI_GameScreen_1 = require("../../ui/Main/UI_GameScreen");
const PlayerUtil_1 = require("../util/PlayerUtil");
const DataUtil_1 = require("../util/DataUtil");
const ResUrlUtil_1 = require("../util/ResUrlUtil");
const UI_character_1 = require("../../ui/Main/UI_character");
const UI_UpStairs_1 = require("../../ui/Main/UI_UpStairs");
const UI_DownStairs_1 = require("../../ui/Main/UI_DownStairs");
const NPCUtil_1 = require("../util/NPCUtil");
const DoorUtil_1 = require("../util/DoorUtil");
const MonsterUtil_1 = require("../util/MonsterUtil");
const PropUtil_1 = require("../util/PropUtil");
const IsWxUtil_1 = require("../util/IsWxUtil");
const FlyUtil_1 = require("../util/FlyUtil");
class GameScreen extends layaMaxUI_1.ui.game.gameUI {
    constructor() {
        super();
        var res = [
            { url: "res/UI/Main_atlas0.png", type: Laya.Loader.IMAGE },
            { url: "res/UI/Main.bin", type: Laya.Loader.BUFFER }
        ];
        Laya.loader.load(res, Laya.Handler.create(this, this.init));
    }
    init() {
        fairygui.UIPackage.addPackage("res/UI/Main");
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        this._view = fairygui.UIPackage.createObjectFromURL(UI_GameScreen_1.default.URL, UI_GameScreen_1.default);
        this._view.makeFullScreen();
        fairygui.GRoot.inst.addChild(this._view);
        // if (Laya.LocalStorage.getJSON('data')) {
        //     DataUtil.player = Laya.LocalStorage.getJSON('data');
        // }
        // else {
        DataUtil_1.DataUtil.player = new PlayerUtil_1.default();
        DataUtil_1.DataUtil.player.init();
        // }
        this.initPanel();
        this.initMapList();
        this.initOperation();
        this._walking = false;
        this._view.m_btnSave.onClick(this, this.saveNow);
        this._view.m_blood_red.onClick(this, this._useBloodRed);
        this._view.m_blood_blue.onClick(this, this._useBloodBlue);
    }
    /** 初始化面板 */
    initPanel() {
        this._view.m_panel.getChild('life').asCom.getChild('attribute').asTextField.text = "生命";
        this._view.m_panel.getChild('attack').asCom.getChild('attribute').asTextField.text = "攻击";
        this._view.m_panel.getChild('defense').asCom.getChild('attribute').asTextField.text = "防御";
        this._view.m_panel.getChild('hit').asCom.getChild('attribute').asTextField.text = "命中";
        this._view.m_panel.getChild('crit').asCom.getChild('attribute').asTextField.text = "暴击";
        this._view.m_panel.getChild('dodge').asCom.getChild('attribute').asTextField.text = "闪避";
        this._view.m_panel.getChild('gold').asCom.getChild('attribute').asTextField.text = "金币";
        this._view.m_panel.getChild('experience').asCom.getChild('attribute').asTextField.text = "经验";
        this.flushPlayerPanel();
    }
    /** 刷新面板 */
    flushPlayerPanel() {
        this._view.m_panel.getChild('grade').asTextField.text = "" + DataUtil_1.DataUtil.player.grade;
        this._view.m_panel.getChild('life').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.life;
        this._view.m_panel.getChild('attack').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.attack;
        this._view.m_panel.getChild('defense').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.defense;
        this._view.m_panel.getChild('hit').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.hit;
        this._view.m_panel.getChild('crit').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.crit;
        this._view.m_panel.getChild('dodge').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.dodge;
        this._view.m_panel.getChild('gold').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.gold;
        this._view.m_panel.getChild('experience').asCom.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.experience;
        this._view.m_keyPanel.getChild('key_yellow').asTextField.text = "" + DataUtil_1.DataUtil.player.key[0];
        this._view.m_keyPanel.getChild('key_blue').asTextField.text = "" + DataUtil_1.DataUtil.player.key[1];
        this._view.m_keyPanel.getChild('key_red').asTextField.text = "" + DataUtil_1.DataUtil.player.key[2];
        if (DataUtil_1.DataUtil.player.layer) {
            this._view.m_layer.getController('type').selectedIndex = 1;
            this._view.m_layer.getChild('layer').asTextField.text = "" + DataUtil_1.DataUtil.player.layer;
        }
        else {
            this._view.m_layer.getController('type').selectedIndex = 0;
        }
        this.flushKnapsack();
        this.saveNow();
    }
    /** 刷新背包 */
    flushKnapsack() {
        if (DataUtil_1.DataUtil.player.blood_red == 0) {
            this._view.m_blood_red.getController('gray').selectedIndex = 1;
        }
        else {
            this._view.m_blood_red.getController('gray').selectedIndex = 0;
            if (DataUtil_1.DataUtil.player.blood_red == 1) {
                this._view.m_blood_red.getController('nums').selectedIndex = 0;
            }
            else {
                this._view.m_blood_red.getController('nums').selectedIndex = 1;
                this._view.m_blood_red.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.blood_red;
            }
        }
        if (DataUtil_1.DataUtil.player.blood_blue == 0) {
            this._view.m_blood_blue.getController('gray').selectedIndex = 1;
        }
        else {
            this._view.m_blood_blue.getController('gray').selectedIndex = 0;
            if (DataUtil_1.DataUtil.player.blood_blue == 1) {
                this._view.m_blood_blue.getController('nums').selectedIndex = 0;
            }
            else {
                this._view.m_blood_blue.getController('nums').selectedIndex = 1;
                this._view.m_blood_blue.getChild('num').asTextField.text = "" + DataUtil_1.DataUtil.player.blood_blue;
            }
        }
    }
    /** 初始化地图 */
    initMapList(type) {
        this._view.m_mapList.removeChildren(0, 120);
        let mapList = DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).map;
        for (let i = 0; i < mapList.length; i++) {
            let item = this._view.m_mapList.addItemFromPool();
            item.getChild('map').asLoader.url = ResUrlUtil_1.ResUrlUtil.getEventUrl(DataUtil_1.DataUtil.getEvent(mapList[i]).icon);
            //角色位置 type为1时为下楼位置
            if (!type && DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).character[0] == i) {
                let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
                character.setScale(2, 2);
                item.addChild(character);
                DataUtil_1.DataUtil.player.characterIndex = i;
            }
            if (type && DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).character[1] == i) {
                let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
                character.setScale(2, 2);
                item.addChild(character);
                DataUtil_1.DataUtil.player.characterIndex = i;
            }
            //上下楼梯位置
            if (DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[0] >= 0 && DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[0] == i) {
                let upStairs = fairygui.UIPackage.createObjectFromURL(UI_UpStairs_1.default.URL, UI_UpStairs_1.default);
                item.addChild(upStairs);
            }
            if (DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[1] >= 0 && DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[1] == i) {
                let downStairs = fairygui.UIPackage.createObjectFromURL(UI_DownStairs_1.default.URL, UI_DownStairs_1.default);
                item.addChild(downStairs);
            }
            this._addNPC(i, item);
            this._addDoor(i, item);
            this._addMonster(i, item);
            this._addProp(i, item);
        }
    }
    /** NPC位置 */
    _addNPC(index, item) {
        let temp = DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer];
        for (let i = 0; i < temp.npc.length; i++) {
            if (temp.npcIndex[i] == index) {
                let npc = NPCUtil_1.NPCUtil.getNPCById(temp.npc[i]);
                npc.setScale(2, 2);
                item.addChild(npc);
            }
        }
    }
    /** 门位置 */
    _addDoor(index, item) {
        let temp = DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer];
        for (let i = 0; i < temp.door.length; i++) {
            if (temp.doorIndex[i] == index) {
                let door = DoorUtil_1.DoorUtil.getDoorById(temp.door[i]);
                door.setScale(2, 2);
                item.addChild(door);
            }
        }
    }
    /** 怪物位置 */
    _addMonster(index, item) {
        let temp = DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer];
        for (let i = 0; i < temp.monster.length; i++) {
            if (temp.monsterIndex[i] == index) {
                let monster = MonsterUtil_1.MonsterUtil.getMonsterById(temp.monster[i]);
                monster.setScale(2, 2);
                item.addChild(monster);
            }
        }
    }
    /** 道具位置 */
    _addProp(index, item) {
        let temp = DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer];
        for (let i = 0; i < temp.prop.length; i++) {
            if (temp.propIndex[i] == index) {
                let prop = PropUtil_1.PropUtil.getPropById(temp.prop[i]);
                item.addChild(prop);
            }
        }
    }
    /** 操作上下左右 */
    initOperation() {
        this._view.m_operation.getChild('btnUp').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartUp);
        this._view.m_operation.getChild('btnDown').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartDown);
        this._view.m_operation.getChild('btnRight').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartRight);
        this._view.m_operation.getChild('btnLeft').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartLeft);
    }
    _beforeMove() {
        this._view.m_operation.getChild('btnUp').asGraph.off(Laya.Event.MOUSE_DOWN, this, this._moveStartUp);
        this._view.m_operation.getChild('btnDown').asGraph.off(Laya.Event.MOUSE_DOWN, this, this._moveStartDown);
        this._view.m_operation.getChild('btnRight').asGraph.off(Laya.Event.MOUSE_DOWN, this, this._moveStartRight);
        this._view.m_operation.getChild('btnLeft').asGraph.off(Laya.Event.MOUSE_DOWN, this, this._moveStartLeft);
        this._view.m_operation.on(Laya.Event.MOUSE_OUT, this, this._moveReturn);
        this._view.m_operation.on(Laya.Event.MOUSE_UP, this, this._moveReturn);
        this._view.m_operation.getChild('btnUp').asGraph.on(Laya.Event.MOUSE_OVER, this, this._moveUp);
        this._view.m_operation.getChild('btnDown').asGraph.on(Laya.Event.MOUSE_OVER, this, this._moveDown);
        this._view.m_operation.getChild('btnRight').asGraph.on(Laya.Event.MOUSE_OVER, this, this._moveRight);
        this._view.m_operation.getChild('btnLeft').asGraph.on(Laya.Event.MOUSE_OVER, this, this._moveLeft);
    }
    _moveStartUp() {
        this._beforeMove();
        this._moveUp();
    }
    _moveStartDown() {
        this._beforeMove();
        this._moveDown();
    }
    _moveStartRight() {
        this._beforeMove();
        this._moveRight();
    }
    _moveStartLeft() {
        this._beforeMove();
        this._moveLeft();
    }
    _moveUp() {
        this._view.m_operation.getController('type').selectedIndex = 1;
        if (this._walking)
            return;
        if (this._judgeCharacterUp(DataUtil_1.DataUtil.player.characterIndex, DataUtil_1.DataUtil.player.characterIndex - 11)) {
            if (this._judgeCollision(DataUtil_1.DataUtil.player.characterIndex - 11))
                return;
            this._walking = true;
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.getTransition('back').play();
            Laya.Tween.to(this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom, { y: -64 }, 330, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.removeFromParent();
                let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
                character.setScale(2, 2);
                character.getController('type').selectedIndex = 3;
                this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex - 11].asCom.addChild(character);
                DataUtil_1.DataUtil.player.characterIndex -= 11;
                this._walking = false;
                this._walkNext();
            }));
        }
    }
    _moveDown() {
        this._view.m_operation.getController('type').selectedIndex = 2;
        if (this._walking)
            return;
        if (this._judgeCharacterDown(DataUtil_1.DataUtil.player.characterIndex, DataUtil_1.DataUtil.player.characterIndex + 11)) {
            if (this._judgeCollision(DataUtil_1.DataUtil.player.characterIndex + 11))
                return;
            this._walking = true;
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.removeFromParent();
            let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
            character.setScale(2, 2);
            character.setXY(0, -64);
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 11].asCom.addChild(character);
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 11].asCom.getChildAt(1).asCom.getTransition('front').play();
            Laya.Tween.to(this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 11].asCom.getChildAt(1).asCom, { y: 0 }, 330, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                DataUtil_1.DataUtil.player.characterIndex += 11;
                this._walking = false;
                this._walkNext();
            }));
        }
    }
    _moveRight() {
        this._view.m_operation.getController('type').selectedIndex = 4;
        if (this._walking)
            return;
        if (this._judgeCharacterRight(DataUtil_1.DataUtil.player.characterIndex, DataUtil_1.DataUtil.player.characterIndex + 1)) {
            if (this._judgeCollision(DataUtil_1.DataUtil.player.characterIndex + 1))
                return;
            this._walking = true;
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.removeFromParent();
            let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
            character.setScale(2, 2);
            character.setXY(-64, 0);
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 1].asCom.addChild(character);
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 1].asCom.getChildAt(1).asCom.getTransition('right').play();
            Laya.Tween.to(this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex + 1].asCom.getChildAt(1).asCom, { x: 0 }, 330, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                DataUtil_1.DataUtil.player.characterIndex += 1;
                this._walking = false;
                this._walkNext();
            }));
        }
    }
    _moveLeft() {
        this._view.m_operation.getController('type').selectedIndex = 3;
        if (this._walking)
            return;
        if (this._judgeCharacterLeft(DataUtil_1.DataUtil.player.characterIndex, DataUtil_1.DataUtil.player.characterIndex - 1)) {
            if (this._judgeCollision(DataUtil_1.DataUtil.player.characterIndex - 1))
                return;
            this._walking = true;
            this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.getTransition('left').play();
            Laya.Tween.to(this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom, { x: -64 }, 330, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex].asCom.getChildAt(1).asCom.removeFromParent();
                let character = fairygui.UIPackage.createObjectFromURL(UI_character_1.default.URL, UI_character_1.default);
                character.setScale(2, 2);
                character.getController('type').selectedIndex = 1;
                this._view.m_mapList._children[DataUtil_1.DataUtil.player.characterIndex - 1].asCom.addChild(character);
                DataUtil_1.DataUtil.player.characterIndex -= 1;
                this._walking = false;
                this._walkNext();
            }));
        }
    }
    _walkNext() {
        switch (this._view.m_operation.getController('type').selectedIndex) {
            case 1:
                this._moveUp();
                break;
            case 2:
                this._moveDown();
                break;
            case 3:
                this._moveLeft();
                break;
            case 4:
                this._moveRight();
                break;
        }
    }
    _moveReturn() {
        this._view.m_operation.off(Laya.Event.MOUSE_OUT, this, this._moveReturn);
        this._view.m_operation.off(Laya.Event.MOUSE_UP, this, this._moveReturn);
        this._view.m_operation.getChild('btnUp').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartUp);
        this._view.m_operation.getChild('btnDown').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartDown);
        this._view.m_operation.getChild('btnRight').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartRight);
        this._view.m_operation.getChild('btnLeft').asGraph.on(Laya.Event.MOUSE_DOWN, this, this._moveStartLeft);
        this._view.m_operation.getChild('btnUp').asGraph.off(Laya.Event.MOUSE_OVER, this, this._moveUp);
        this._view.m_operation.getChild('btnDown').asGraph.off(Laya.Event.MOUSE_OVER, this, this._moveDown);
        this._view.m_operation.getChild('btnRight').asGraph.off(Laya.Event.MOUSE_OVER, this, this._moveRight);
        this._view.m_operation.getChild('btnLeft').asGraph.off(Laya.Event.MOUSE_OVER, this, this._moveLeft);
        this._view.m_operation.getController('type').selectedIndex = 0;
    }
    _judgeCharacterUp(characterIndex, itemIndex) {
        if (itemIndex < 0) {
            return false;
        }
        let mapList = DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).map;
        if (mapList[itemIndex] != 1) {
            return false;
        }
        return true;
    }
    _judgeCharacterDown(characterIndex, itemIndex) {
        if (itemIndex > 120) {
            return false;
        }
        let mapList = DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).map;
        if (mapList[itemIndex] != 1) {
            return false;
        }
        return true;
    }
    _judgeCharacterRight(characterIndex, itemIndex) {
        if (characterIndex % 11 == 10) {
            return false;
        }
        let mapList = DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).map;
        if (mapList[itemIndex] != 1) {
            return false;
        }
        return true;
    }
    _judgeCharacterLeft(characterIndex, itemIndex) {
        if (characterIndex % 11 == 0) {
            return false;
        }
        let mapList = DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).map;
        if (mapList[itemIndex] != 1) {
            return false;
        }
        return true;
    }
    /** 判断碰撞 */
    _judgeCollision(index) {
        if (this._view.m_mapList._children[index].asCom._children.length == 1)
            return false;
        if (this._judgeStairs(index))
            return true;
        if (this._judgeNPC(index))
            return true;
        if (this._judgeProp(index))
            return true;
        if (this._judgeDoor(index))
            return true;
        if (this._judgeMonster(index))
            return true;
        return false;
    }
    /** 判断上下楼 */
    _judgeStairs(index) {
        if (index == DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[0]) {
            DataUtil_1.DataUtil.player.layer++;
            Laya.Scene.open("game/transition.scene", false, true);
            Laya.timer.once(1000, this, this.initMapList);
            Laya.timer.once(2000, this, this.flushPlayerPanel);
            this._moveReturn();
            return true;
        }
        else if (index == DataUtil_1.DataUtil.getMap(DataUtil_1.DataUtil.player.layer).floor[1]) {
            DataUtil_1.DataUtil.player.layer--;
            Laya.Scene.open("game/transition.scene", false, false);
            Laya.timer.once(1000, this, this.initMapList, [1]);
            Laya.timer.once(2000, this, this.flushPlayerPanel);
            this._moveReturn();
            return true;
        }
        return false;
    }
    /** 判断NPC */
    _judgeNPC(index) {
        for (let i = 0; i < DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].npcIndex.length; i++) {
            if (index == DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].npcIndex[i]) {
                //to do 对话系统
                return true;
            }
        }
        return false;
    }
    /** 判断道具 */
    _judgeProp(index) {
        for (let i = 0; i < DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].propIndex.length; i++) {
            if (index == DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].propIndex[i]) {
                if (PropUtil_1.PropUtil.addProp(DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].prop[i])) {
                    //血瓶动画(贝塞尔)
                    let { x, y } = this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.localToGlobal();
                    let temp = this._view.m_mapList._children[index].asCom.getChildAt(1).asCom;
                    this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.removeFromParent();
                    temp.setXY(x, y);
                    this._view.addChild(temp);
                    let targetComp = this._view.m_blood_red;
                    let rewardType = 0;
                    if (DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].prop[i] == 5) {
                        targetComp = this._view.m_blood_blue;
                        rewardType = 1;
                    }
                    FlyUtil_1.FlyUtil.flyObject(temp, targetComp, () => {
                        //动画后增加数据，防止连续获得背包显示异常
                        if (rewardType) {
                            DataUtil_1.DataUtil.player.blood_blue++;
                        }
                        else {
                            DataUtil_1.DataUtil.player.blood_red++;
                        }
                        this.flushPlayerPanel();
                    });
                }
                else {
                    this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.removeFromParent();
                    this.flushPlayerPanel();
                }
                DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].propIndex.splice(i, 1);
                DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].prop.splice(i, 1);
                return false;
            }
        }
        return false;
    }
    /** 判断门 */
    _judgeDoor(index) {
        for (let i = 0; i < DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].doorIndex.length; i++) {
            if (index == DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].doorIndex[i]) {
                if (DoorUtil_1.DoorUtil.judgeOpenDoorOrNot(DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].door[i])) {
                    this.flushPlayerPanel();
                    this._walking = true;
                    DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].doorIndex.splice(i, 1);
                    DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].door.splice(i, 1);
                    this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.getTransition("common").play(Laya.Handler.create(this, () => {
                        this._walking = false;
                        this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.removeFromParent();
                        this._walkNext();
                    }));
                }
                return true;
            }
        }
        return false;
    }
    /** 判断怪物 */
    _judgeMonster(index) {
        for (let i = 0; i < DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].monsterIndex.length; i++) {
            if (index == DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].monsterIndex[i]) {
                //to do 战斗
                this._view.m_mapList._children[index].asCom.getChildAt(1).asCom.removeFromParent();
                //战斗后
                DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].monsterIndex.splice(i, 1);
                DataUtil_1.DataUtil.player.map[DataUtil_1.DataUtil.player.layer].monster.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    saveNow() {
        if (IsWxUtil_1.IsWxUtil.isWxEnvironment()) {
            IsWxUtil_1.WxUtil.saveNow(DataUtil_1.DataUtil.player);
        }
        else {
            Laya.LocalStorage.setJSON("data", DataUtil_1.DataUtil.player);
        }
    }
    _useBloodBlue() {
        if (this._view.m_blood_blue.value > 0)
            return;
        if (DataUtil_1.DataUtil.player.blood_blue <= 0)
            return;
        DataUtil_1.DataUtil.player.blood_blue--;
        DataUtil_1.DataUtil.player.life += 500;
        this._view.m_blood_blue.value = 100;
        this.flushPlayerPanel();
        Laya.timer.loop(20, this, this.cdBloodBlue);
    }
    cdBloodBlue() {
        this._view.m_blood_blue.value--;
        if (this._view.m_blood_blue.value <= 0) {
            Laya.timer.clear(this, this.cdBloodBlue);
        }
    }
    _useBloodRed() {
        if (this._view.m_blood_red.value > 0)
            return;
        if (DataUtil_1.DataUtil.player.blood_red <= 0)
            return;
        DataUtil_1.DataUtil.player.blood_red--;
        DataUtil_1.DataUtil.player.life += 200;
        this._view.m_blood_red.value = 100;
        this.flushPlayerPanel();
        Laya.timer.loop(20, this, this.cdBloodRed);
    }
    cdBloodRed() {
        this._view.m_blood_red.value--;
        if (this._view.m_blood_red.value <= 0) {
            Laya.timer.clear(this, this.cdBloodRed);
        }
    }
}
exports.default = GameScreen;
},{"../../ui/Main/UI_DownStairs":21,"../../ui/Main/UI_GameScreen":23,"../../ui/Main/UI_UpStairs":63,"../../ui/Main/UI_character":64,"../../ui/layaMaxUI":69,"../util/DataUtil":8,"../util/DoorUtil":9,"../util/FlyUtil":10,"../util/IsWxUtil":11,"../util/MonsterUtil":12,"../util/NPCUtil":13,"../util/PlayerUtil":14,"../util/PropUtil":15,"../util/ResUrlUtil":16}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../ui/layaMaxUI");
const UI_HomeScreen_1 = require("../../ui/Main/UI_HomeScreen");
class HomeScreen extends layaMaxUI_1.ui.game.homeUI {
    constructor() {
        super();
        var res = [
            { url: "res/UI/Main_atlas0.png", type: Laya.Loader.IMAGE },
            { url: "res/UI/Main.bin", type: Laya.Loader.BUFFER }
        ];
        Laya.loader.load(res, Laya.Handler.create(this, this.init));
    }
    init() {
        fairygui.UIConfig.packageFileExtension = 'bin';
        fairygui.UIPackage.addPackage("res/UI/Main");
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        this._view = fairygui.UIPackage.createObjectFromURL(UI_HomeScreen_1.default.URL, UI_HomeScreen_1.default);
        this._view.makeFullScreen();
        fairygui.GRoot.inst.addChild(this._view);
        this._view.m_btnExplain.onClick(this, this._explain);
        this._view.m_btnLeave.onClick(this, this._leave);
        this._view.m_btnStart.onClick(this, this._gameStart);
    }
    _explain() {
        Laya.Scene.open("game/explain.scene", true);
    }
    _gameStart() {
        Laya.Scene.open("game/game.scene", true);
    }
    _leave() {
        //游戏结束
    }
}
exports.default = HomeScreen;
},{"../../ui/Main/UI_HomeScreen":24,"../../ui/layaMaxUI":69}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const event = require('../data/event.json').list;
const map = require('../data/map.json').list;
class DataUtil {
    static getMap(layer) {
        return map.filter(a => a.layer == layer)[0];
    }
    static getMapList() {
        return map;
    }
    static getEvent(id) {
        return event.filter(a => a.id == id)[0];
    }
    static getNPC(layer) {
        let npc = map.filter(a => a.layer == layer)[0].npc;
        let arr = [];
        for (let i = 0; i < npc.length; i++) {
            if (i % 2 == 1) {
                arr.push(npc[i]);
            }
        }
        return arr;
    }
    static getNPCIndex(layer) {
        let npc = map.filter(a => a.layer == layer)[0].npc;
        let arr = [];
        for (let i = 0; i < npc.length; i++) {
            if (i % 2 == 0) {
                arr.push(npc[i]);
            }
        }
        return arr;
    }
    static getDoor(layer) {
        let door = map.filter(a => a.layer == layer)[0].door;
        let arr = [];
        for (let i = 0; i < door.length; i++) {
            if (i % 2 == 1) {
                arr.push(door[i]);
            }
        }
        return arr;
    }
    static getDoorIndex(layer) {
        let door = map.filter(a => a.layer == layer)[0].door;
        let arr = [];
        for (let i = 0; i < door.length; i++) {
            if (i % 2 == 0) {
                arr.push(door[i]);
            }
        }
        return arr;
    }
    static getMonster(layer) {
        let monster = map.filter(a => a.layer == layer)[0].monster;
        let arr = [];
        for (let i = 0; i < monster.length; i++) {
            if (i % 2 == 1) {
                arr.push(monster[i]);
            }
        }
        return arr;
    }
    static getMonsterIndex(layer) {
        let monster = map.filter(a => a.layer == layer)[0].monster;
        let arr = [];
        for (let i = 0; i < monster.length; i++) {
            if (i % 2 == 0) {
                arr.push(monster[i]);
            }
        }
        return arr;
    }
    static getProp(layer) {
        let prop = map.filter(a => a.layer == layer)[0].prop;
        let arr = [];
        for (let i = 0; i < prop.length; i++) {
            if (i % 2 == 1) {
                arr.push(prop[i]);
            }
        }
        return arr;
    }
    static getPropIndex(layer) {
        let prop = map.filter(a => a.layer == layer)[0].prop;
        let arr = [];
        for (let i = 0; i < prop.length; i++) {
            if (i % 2 == 0) {
                arr.push(prop[i]);
            }
        }
        return arr;
    }
}
exports.DataUtil = DataUtil;
},{"../data/event.json":3,"../data/map.json":4}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UI_door_yellow_1 = require("../../ui/Main/UI_door_yellow");
const UI_door_blue_1 = require("../../ui/Main/UI_door_blue");
const UI_door_red_1 = require("../../ui/Main/UI_door_red");
const DataUtil_1 = require("./DataUtil");
class DoorUtil {
    static getDoorById(id) {
        switch (id) {
            case 1:
                return fairygui.UIPackage.createObjectFromURL(UI_door_yellow_1.default.URL, UI_door_yellow_1.default);
            case 2:
                return fairygui.UIPackage.createObjectFromURL(UI_door_blue_1.default.URL, UI_door_blue_1.default);
            case 3:
                return fairygui.UIPackage.createObjectFromURL(UI_door_red_1.default.URL, UI_door_red_1.default);
        }
    }
    static judgeOpenDoorOrNot(id) {
        if (id > 3)
            return false;
        if (DataUtil_1.DataUtil.player.key[id - 1]) {
            DataUtil_1.DataUtil.player.key[id - 1]--;
            return true;
        }
        return false;
    }
}
exports.DoorUtil = DoorUtil;
},{"../../ui/Main/UI_door_blue":65,"../../ui/Main/UI_door_red":66,"../../ui/Main/UI_door_yellow":67,"./DataUtil":8}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class FlyUtil {
    constructor() {
    }
    static flyObject(from, target, callBack) {
        let targetPoint = target.localToGlobal();
        let fromPoint = from.localToGlobal();
        let points = [fromPoint, { x: Math.random() * 1334, y: Math.random() * 750 }, targetPoint]; //起始点，控制点，终点
        let arr = BezierPath.CreateBezierPoints(points, 100);
        this.flyItem(from, arr, 0, callBack);
    }
    static flyItem(from, arr, num, callBack) {
        let point = arr[num];
        Laya.Tween.to(from, { x: point.x, y: point.y }, 10, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            if (num < arr.length - 1) {
                this.flyItem(from, arr, num + 1, callBack);
            }
            else {
                from.removeFromParent();
                if (!!callBack)
                    callBack();
            }
        }));
    }
}
exports.FlyUtil = FlyUtil;
class BezierPath {
    static CreateBezierPoints(anchorpoints, pointsAmount) {
        var points = [];
        for (var i = 0; i < pointsAmount; i++) {
            var point = this.MultiPointBezier(anchorpoints, i / pointsAmount);
            points.push(point);
        }
        return points;
    }
    static MultiPointBezier(points, t) {
        let len = points.length;
        let x = 0, y = 0;
        for (let i = 0; i < len; i++) {
            let point = points[i];
            x += point.x * Math.pow((1 - t), (len - 1 - i)) * Math.pow(t, i) * (this.erxiangshi(len - 1, i));
            y += point.y * Math.pow((1 - t), (len - 1 - i)) * Math.pow(t, i) * (this.erxiangshi(len - 1, i));
        }
        return { x: x, y: y };
    }
    static erxiangshi(start, end) {
        let cs = 1, bcs = 1;
        while (end > 0) {
            cs *= start;
            bcs *= end;
            start--;
            end--;
        }
        return (cs / bcs);
    }
    ;
}
exports.BezierPath = BezierPath;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class IsWxUtil {
    static isWxEnvironment() {
        if (window.navigator.userAgent.toLowerCase().indexOf('micromessenger') != -1) {
            return true;
        }
        return false;
    }
}
exports.IsWxUtil = IsWxUtil;
class WxUtil {
    static saveNow(saveData) {
        wx.setStorage({
            key: "data",
            data: saveData,
            success: function () {
                console.log("成功");
            },
            fail: function () {
                console.log("失败");
            },
            complete: function () {
                console.log("完成");
            }
        });
    }
}
exports.WxUtil = WxUtil;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UI_Monster01_1 = require("../../ui/Main/UI_Monster01");
const UI_Monster02_1 = require("../../ui/Main/UI_Monster02");
const UI_Monster03_1 = require("../../ui/Main/UI_Monster03");
const UI_Monster04_1 = require("../../ui/Main/UI_Monster04");
const UI_Monster05_1 = require("../../ui/Main/UI_Monster05");
const UI_Monster06_1 = require("../../ui/Main/UI_Monster06");
const UI_Monster07_1 = require("../../ui/Main/UI_Monster07");
const UI_Monster08_1 = require("../../ui/Main/UI_Monster08");
const UI_Monster09_1 = require("../../ui/Main/UI_Monster09");
const UI_Monster10_1 = require("../../ui/Main/UI_Monster10");
const UI_Monster11_1 = require("../../ui/Main/UI_Monster11");
const UI_Monster12_1 = require("../../ui/Main/UI_Monster12");
const UI_Monster13_1 = require("../../ui/Main/UI_Monster13");
const UI_Monster14_1 = require("../../ui/Main/UI_Monster14");
const UI_Monster15_1 = require("../../ui/Main/UI_Monster15");
const UI_Monster16_1 = require("../../ui/Main/UI_Monster16");
const UI_Monster17_1 = require("../../ui/Main/UI_Monster17");
const UI_Monster18_1 = require("../../ui/Main/UI_Monster18");
const UI_Monster19_1 = require("../../ui/Main/UI_Monster19");
const UI_Monster20_1 = require("../../ui/Main/UI_Monster20");
const UI_Monster21_1 = require("../../ui/Main/UI_Monster21");
const UI_Monster22_1 = require("../../ui/Main/UI_Monster22");
const UI_Monster25_1 = require("../../ui/Main/UI_Monster25");
const UI_Monster26_1 = require("../../ui/Main/UI_Monster26");
const UI_Monster27_1 = require("../../ui/Main/UI_Monster27");
const UI_Monster28_1 = require("../../ui/Main/UI_Monster28");
const UI_Monster30_1 = require("../../ui/Main/UI_Monster30");
const UI_Monster32_1 = require("../../ui/Main/UI_Monster32");
const UI_Monster33_1 = require("../../ui/Main/UI_Monster33");
const UI_Monster34_1 = require("../../ui/Main/UI_Monster34");
const UI_Monster35_1 = require("../../ui/Main/UI_Monster35");
class MonsterUtil {
    // 无23 24 29 31
    static getMonsterById(id) {
        switch (id) {
            case 1:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster01_1.default.URL, UI_Monster01_1.default);
            case 2:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster02_1.default.URL, UI_Monster02_1.default);
            case 3:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster03_1.default.URL, UI_Monster03_1.default);
            case 4:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster04_1.default.URL, UI_Monster04_1.default);
            case 5:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster05_1.default.URL, UI_Monster05_1.default);
            case 6:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster06_1.default.URL, UI_Monster06_1.default);
            case 7:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster07_1.default.URL, UI_Monster07_1.default);
            case 8:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster08_1.default.URL, UI_Monster08_1.default);
            case 9:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster09_1.default.URL, UI_Monster09_1.default);
            case 10:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster10_1.default.URL, UI_Monster10_1.default);
            case 11:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster11_1.default.URL, UI_Monster11_1.default);
            case 12:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster12_1.default.URL, UI_Monster12_1.default);
            case 13:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster13_1.default.URL, UI_Monster13_1.default);
            case 14:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster14_1.default.URL, UI_Monster14_1.default);
            case 15:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster15_1.default.URL, UI_Monster15_1.default);
            case 16:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster16_1.default.URL, UI_Monster16_1.default);
            case 17:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster17_1.default.URL, UI_Monster17_1.default);
            case 18:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster18_1.default.URL, UI_Monster18_1.default);
            case 19:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster19_1.default.URL, UI_Monster19_1.default);
            case 20:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster20_1.default.URL, UI_Monster20_1.default);
            case 21:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster21_1.default.URL, UI_Monster21_1.default);
            case 22:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster22_1.default.URL, UI_Monster22_1.default);
            case 25:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster25_1.default.URL, UI_Monster25_1.default);
            case 26:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster26_1.default.URL, UI_Monster26_1.default);
            case 27:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster27_1.default.URL, UI_Monster27_1.default);
            case 28:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster28_1.default.URL, UI_Monster28_1.default);
            case 30:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster30_1.default.URL, UI_Monster30_1.default);
            case 32:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster32_1.default.URL, UI_Monster32_1.default);
            case 33:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster33_1.default.URL, UI_Monster33_1.default);
            case 34:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster34_1.default.URL, UI_Monster34_1.default);
            case 35:
                return fairygui.UIPackage.createObjectFromURL(UI_Monster35_1.default.URL, UI_Monster35_1.default);
        }
    }
}
exports.MonsterUtil = MonsterUtil;
},{"../../ui/Main/UI_Monster01":28,"../../ui/Main/UI_Monster02":29,"../../ui/Main/UI_Monster03":30,"../../ui/Main/UI_Monster04":31,"../../ui/Main/UI_Monster05":32,"../../ui/Main/UI_Monster06":33,"../../ui/Main/UI_Monster07":34,"../../ui/Main/UI_Monster08":35,"../../ui/Main/UI_Monster09":36,"../../ui/Main/UI_Monster10":37,"../../ui/Main/UI_Monster11":38,"../../ui/Main/UI_Monster12":39,"../../ui/Main/UI_Monster13":40,"../../ui/Main/UI_Monster14":41,"../../ui/Main/UI_Monster15":42,"../../ui/Main/UI_Monster16":43,"../../ui/Main/UI_Monster17":44,"../../ui/Main/UI_Monster18":45,"../../ui/Main/UI_Monster19":46,"../../ui/Main/UI_Monster20":47,"../../ui/Main/UI_Monster21":48,"../../ui/Main/UI_Monster22":49,"../../ui/Main/UI_Monster25":50,"../../ui/Main/UI_Monster26":51,"../../ui/Main/UI_Monster27":52,"../../ui/Main/UI_Monster28":53,"../../ui/Main/UI_Monster30":54,"../../ui/Main/UI_Monster32":55,"../../ui/Main/UI_Monster33":56,"../../ui/Main/UI_Monster34":57,"../../ui/Main/UI_Monster35":58}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UI_fairy_1 = require("../../ui/Main/UI_fairy");
class NPCUtil {
    static getNPCById(id) {
        switch (id) {
            case 1:
                return fairygui.UIPackage.createObjectFromURL(UI_fairy_1.default.URL, UI_fairy_1.default);
        }
    }
}
exports.NPCUtil = NPCUtil;
},{"../../ui/Main/UI_fairy":68}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const DataUtil_1 = require("./DataUtil");
class Player {
    init() {
        this.grade = 1;
        this.life = 1000;
        this.attack = 10;
        this.defense = 10;
        this.hit = 1;
        this.crit = 1;
        this.dodge = 1;
        this.gold = 0;
        this.experience = 0;
        this.layer = 0;
        this.key = [41, 41, 41];
        this.blood_red = 0;
        this.blood_blue = 0;
        this.characterIndex = 0;
        this.map = [];
        this.initMap();
    }
    initMap() {
        let mapList = DataUtil_1.DataUtil.getMapList();
        for (let i = 0; i < mapList.length; i++) {
            let item = {
                npc: [],
                npcIndex: [],
                door: [],
                doorIndex: [],
                monster: [],
                monsterIndex: [],
                prop: [],
                propIndex: []
            };
            item.npc = DataUtil_1.DataUtil.getNPC(i);
            item.npcIndex = DataUtil_1.DataUtil.getNPCIndex(i);
            item.door = DataUtil_1.DataUtil.getDoor(i);
            item.doorIndex = DataUtil_1.DataUtil.getDoorIndex(i);
            item.monster = DataUtil_1.DataUtil.getMonster(i);
            item.monsterIndex = DataUtil_1.DataUtil.getMonsterIndex(i);
            item.prop = DataUtil_1.DataUtil.getProp(i);
            item.propIndex = DataUtil_1.DataUtil.getPropIndex(i);
            this.map.push(item);
        }
    }
    useGold(gold) {
        if (this.gold >= gold) {
            this.gold -= gold;
            return true;
        }
        return false;
    }
    addGold(gold) {
        this.gold += gold;
    }
}
exports.default = Player;
},{"./DataUtil":8}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UI_Key_yellow_1 = require("../../ui/Main/UI_Key_yellow");
const UI_Key_blue_1 = require("../../ui/Main/UI_Key_blue");
const UI_Key_red_1 = require("../../ui/Main/UI_Key_red");
const DataUtil_1 = require("./DataUtil");
const FlyMsgBox_1 = require("../wnd/FlyMsgBox");
const UI_Blood_red_1 = require("../../ui/Main/UI_Blood_red");
const UI_Blood_blue_1 = require("../../ui/Main/UI_Blood_blue");
const UI_Stone_Attack_1 = require("../../ui/Main/UI_Stone_Attack");
const UI_Stone_Defense_1 = require("../../ui/Main/UI_Stone_Defense");
class PropUtil {
    static getPropById(id) {
        switch (id) {
            case 1:
                return fairygui.UIPackage.createObjectFromURL(UI_Key_yellow_1.default.URL, UI_Key_yellow_1.default);
            case 2:
                return fairygui.UIPackage.createObjectFromURL(UI_Key_blue_1.default.URL, UI_Key_blue_1.default);
            case 3:
                return fairygui.UIPackage.createObjectFromURL(UI_Key_red_1.default.URL, UI_Key_red_1.default);
            case 4:
                return fairygui.UIPackage.createObjectFromURL(UI_Blood_red_1.default.URL, UI_Blood_red_1.default);
            case 5:
                return fairygui.UIPackage.createObjectFromURL(UI_Blood_blue_1.default.URL, UI_Blood_blue_1.default);
            case 6:
                return fairygui.UIPackage.createObjectFromURL(UI_Stone_Attack_1.default.URL, UI_Stone_Attack_1.default);
            case 7:
                return fairygui.UIPackage.createObjectFromURL(UI_Stone_Defense_1.default.URL, UI_Stone_Defense_1.default);
            default:
                console.log("理论不会走到这里，有错误 函数名:getPropById", id);
                break;
        }
    }
    static addProp(id) {
        switch (id) {
            case 1:
                DataUtil_1.DataUtil.player.key[0]++;
                FlyMsgBox_1.FlyMsgBox.showTip("获得黄钥匙*1");
                return false;
            case 2:
                DataUtil_1.DataUtil.player.key[1]++;
                FlyMsgBox_1.FlyMsgBox.showTip("获得蓝钥匙*1");
                return false;
            case 3:
                DataUtil_1.DataUtil.player.key[2]++;
                FlyMsgBox_1.FlyMsgBox.showTip("获得红钥匙*1");
                return false;
            case 4:
                FlyMsgBox_1.FlyMsgBox.showTip("获得红血瓶*1");
                return true;
            case 5:
                FlyMsgBox_1.FlyMsgBox.showTip("获得蓝血瓶*1");
                return true;
            case 6:
                DataUtil_1.DataUtil.player.attack += 3;
                FlyMsgBox_1.FlyMsgBox.showTip("获得红宝石,攻击力提升3");
                return false;
            case 7:
                DataUtil_1.DataUtil.player.defense += 3;
                FlyMsgBox_1.FlyMsgBox.showTip("获得蓝宝石,防御力提升3");
                return false;
            default:
                console.log("理论不会走到这里，有错误 函数名:addProp", id);
                return false;
        }
    }
}
exports.PropUtil = PropUtil;
},{"../../ui/Main/UI_Blood_blue":19,"../../ui/Main/UI_Blood_red":20,"../../ui/Main/UI_Key_blue":25,"../../ui/Main/UI_Key_red":26,"../../ui/Main/UI_Key_yellow":27,"../../ui/Main/UI_Stone_Attack":60,"../../ui/Main/UI_Stone_Defense":61,"../wnd/FlyMsgBox":17,"./DataUtil":8}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ResUrlUtil {
    static getEventUrl(eventUrl) {
        return `res/event/${eventUrl}.png`;
    }
}
exports.ResUrlUtil = ResUrlUtil;
},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UI_MsgBox_1 = require("../../ui/Main/UI_MsgBox");
class FlyMsgBox extends UI_MsgBox_1.default {
    static create() {
        if (this._pool && this._pool.length > 0) {
            return this._pool.shift();
        }
        let msg = fairygui.UIPackage.createObjectFromURL(UI_MsgBox_1.default.URL, FlyMsgBox);
        msg.setPivot(0.5, 0.5, true);
        return msg;
    }
    show(msg) {
        this.x = Laya.stage.width / 2;
        this.y = Laya.stage.height / 2; //这里可以控制飞起的高度位置
        this.alpha = 1;
        this.m_txt.text = msg;
        Laya.Tween.to(this, { y: this.y - 200, alpha: 0 }, 1600);
    }
    recover() {
        if (this.parent) {
            this.removeFromParent();
        }
        !FlyMsgBox._pool && (FlyMsgBox._pool = []);
        FlyMsgBox._pool.push(this);
    }
    /** FlyMsgBox.showTip("") */
    static showTip(msg) {
        let temp = FlyMsgBox.create();
        fairygui.GRoot.inst.addChild(temp);
        temp.show(msg);
    }
}
exports.FlyMsgBox = FlyMsgBox;
},{"../../ui/Main/UI_MsgBox":59}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../ui/layaMaxUI");
const UI_TransitionWnd_1 = require("../../ui/Main/UI_TransitionWnd");
const DataUtil_1 = require("../util/DataUtil");
class TransitionWnd extends layaMaxUI_1.ui.game.gameUI {
    constructor() {
        super();
        var res = [
            { url: "res/UI/Main_atlas0.png", type: Laya.Loader.IMAGE },
            { url: "res/UI/Main.bin", type: Laya.Loader.BUFFER }
        ];
        Laya.loader.load(res, Laya.Handler.create(this, this.init));
    }
    init() {
        fairygui.UIPackage.addPackage("res/UI/Main");
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        this._view = fairygui.UIPackage.createObjectFromURL(UI_TransitionWnd_1.default.URL, UI_TransitionWnd_1.default);
        this._view.makeFullScreen();
        fairygui.GRoot.inst.addChild(this._view);
        this.showOriginalLayer(this._type);
        Laya.timer.once(1500, this, this.changeLayer);
        Laya.timer.once(2500, this, this.hide);
    }
    onOpened(data) {
        this._type = data;
    }
    hide() {
        Laya.Scene.close("game/transition.scene");
        this._view.removeFromParent();
    }
    changeLayer() {
        if (DataUtil_1.DataUtil.player.layer <= 0) {
            this._view.m_type.selectedIndex = 0;
        }
        else {
            this._view.m_type.selectedIndex = 1;
            this._view.m_layer.text = "" + DataUtil_1.DataUtil.player.layer;
        }
    }
    showOriginalLayer(type) {
        let layer = DataUtil_1.DataUtil.player.layer;
        if (type) {
            layer--;
        }
        else {
            layer++;
        }
        if (layer <= 0) {
            this._view.m_type.selectedIndex = 0;
        }
        else {
            this._view.m_type.selectedIndex = 1;
            this._view.m_layer.text = "" + layer;
        }
    }
}
exports.default = TransitionWnd;
},{"../../ui/Main/UI_TransitionWnd":62,"../../ui/layaMaxUI":69,"../util/DataUtil":8}],19:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Blood_blue extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Blood_blue"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Blood_blue;
UI_Blood_blue.URL = "ui://n1eyqnayg43eha";
},{}],20:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Blood_red extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Blood_red"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Blood_red;
UI_Blood_red.URL = "ui://n1eyqnayg43eh9";
},{}],21:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_DownStairs extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "DownStairs"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_DownStairs;
UI_DownStairs.URL = "ui://n1eyqnayxz9qh1";
},{}],22:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_ExplainScreen extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "ExplainScreen"));
    }
    onConstruct() {
        this.m_btnClose = (this.getChildAt(1));
    }
}
exports.default = UI_ExplainScreen;
UI_ExplainScreen.URL = "ui://n1eyqnayb9orfn";
},{}],23:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_GameScreen extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "GameScreen"));
    }
    onConstruct() {
        this.m_operation = (this.getChildAt(1));
        this.m_mapList = (this.getChildAt(2));
        this.m_panel = (this.getChildAt(4));
        this.m_keyPanel = (this.getChildAt(5));
        this.m_layer = (this.getChildAt(6));
        this.m_btnSave = (this.getChildAt(7));
        this.m_blood_red = (this.getChildAt(8));
        this.m_blood_blue = (this.getChildAt(9));
    }
}
exports.default = UI_GameScreen;
UI_GameScreen.URL = "ui://n1eyqnayh7ng1x";
},{}],24:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_HomeScreen extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "HomeScreen"));
    }
    onConstruct() {
        this.m_btnExplain = (this.getChildAt(2));
        this.m_btnStart = (this.getChildAt(3));
        this.m_btnLeave = (this.getChildAt(4));
        this.m_t0 = this.getTransitionAt(0);
    }
}
exports.default = UI_HomeScreen;
UI_HomeScreen.URL = "ui://n1eyqnayprsq1";
},{}],25:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Key_blue extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Key_blue"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Key_blue;
UI_Key_blue.URL = "ui://n1eyqnayu1oph3";
},{}],26:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Key_red extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Key_red"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Key_red;
UI_Key_red.URL = "ui://n1eyqnayu1oph4";
},{}],27:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Key_yellow extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Key_yellow"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Key_yellow;
UI_Key_yellow.URL = "ui://n1eyqnayu1oph2";
},{}],28:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster01 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster01"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster01;
UI_Monster01.URL = "ui://n1eyqnaybhkz8w";
},{}],29:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster02 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster02"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster02;
UI_Monster02.URL = "ui://n1eyqnaybhkz8x";
},{}],30:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster03 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster03"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster03;
UI_Monster03.URL = "ui://n1eyqnaybhkz8z";
},{}],31:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster04 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster04"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster04;
UI_Monster04.URL = "ui://n1eyqnaybhkz90";
},{}],32:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster05 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster05"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster05;
UI_Monster05.URL = "ui://n1eyqnaybhkz91";
},{}],33:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster06 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster06"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster06;
UI_Monster06.URL = "ui://n1eyqnaybhkz92";
},{}],34:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster07 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster07"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster07;
UI_Monster07.URL = "ui://n1eyqnaybhkz93";
},{}],35:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster08 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster08"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster08;
UI_Monster08.URL = "ui://n1eyqnaybhkz94";
},{}],36:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster09 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster09"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster09;
UI_Monster09.URL = "ui://n1eyqnaybhkz95";
},{}],37:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster10 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster10"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster10;
UI_Monster10.URL = "ui://n1eyqnaybhkz96";
},{}],38:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster11 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster11"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster11;
UI_Monster11.URL = "ui://n1eyqnaybhkz97";
},{}],39:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster12 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster12"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster12;
UI_Monster12.URL = "ui://n1eyqnaybhkz98";
},{}],40:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster13 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster13"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster13;
UI_Monster13.URL = "ui://n1eyqnaybhkz99";
},{}],41:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster14 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster14"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster14;
UI_Monster14.URL = "ui://n1eyqnaybhkz9a";
},{}],42:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster15 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster15"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster15;
UI_Monster15.URL = "ui://n1eyqnaybhkz9p";
},{}],43:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster16 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster16"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster16;
UI_Monster16.URL = "ui://n1eyqnaybhkz9q";
},{}],44:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster17 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster17"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster17;
UI_Monster17.URL = "ui://n1eyqnaybhkz9r";
},{}],45:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster18 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster18"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster18;
UI_Monster18.URL = "ui://n1eyqnaybhkz9s";
},{}],46:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster19 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster19"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster19;
UI_Monster19.URL = "ui://n1eyqnaybhkz9t";
},{}],47:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster20 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster20"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster20;
UI_Monster20.URL = "ui://n1eyqnaybhkz9u";
},{}],48:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster21 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster21"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster21;
UI_Monster21.URL = "ui://n1eyqnaybhkz9v";
},{}],49:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster22 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster22"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster22;
UI_Monster22.URL = "ui://n1eyqnayz6mthn";
},{}],50:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster25 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster25"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster25;
UI_Monster25.URL = "ui://n1eyqnaybhkz9z";
},{}],51:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster26 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster26"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster26;
UI_Monster26.URL = "ui://n1eyqnaybhkza0";
},{}],52:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster27 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster27"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster27;
UI_Monster27.URL = "ui://n1eyqnaybhkza1";
},{}],53:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster28 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster28"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster28;
UI_Monster28.URL = "ui://n1eyqnaybhkza2";
},{}],54:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster30 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster30"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster30;
UI_Monster30.URL = "ui://n1eyqnaybhkza4";
},{}],55:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster32 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster32"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster32;
UI_Monster32.URL = "ui://n1eyqnaybhkza6";
},{}],56:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster33 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster33"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster33;
UI_Monster33.URL = "ui://n1eyqnaybhkza7";
},{}],57:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster34 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster34"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster34;
UI_Monster34.URL = "ui://n1eyqnaybhkza8";
},{}],58:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Monster35 extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Monster35"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_Monster35;
UI_Monster35.URL = "ui://n1eyqnaybhkza9";
},{}],59:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_MsgBox extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "MsgBox"));
    }
    onConstruct() {
        this.m_txt = (this.getChildAt(1));
    }
}
exports.default = UI_MsgBox;
UI_MsgBox.URL = "ui://n1eyqnayl5czh8";
},{}],60:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Stone_Attack extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Stone_Attack"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Stone_Attack;
UI_Stone_Attack.URL = "ui://n1eyqnayg43ehd";
},{}],61:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_Stone_Defense extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "Stone_Defense"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_Stone_Defense;
UI_Stone_Defense.URL = "ui://n1eyqnayg43ehe";
},{}],62:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_TransitionWnd extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "TransitionWnd"));
    }
    onConstruct() {
        this.m_type = this.getControllerAt(0);
        this.m_layer = (this.getChildAt(3));
        this.m_t0 = this.getTransitionAt(0);
    }
}
exports.default = UI_TransitionWnd;
UI_TransitionWnd.URL = "ui://n1eyqnaynfqthf";
},{}],63:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_UpStairs extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "UpStairs"));
    }
    onConstruct() {
        this.m_icon = (this.getChildAt(0));
    }
}
exports.default = UI_UpStairs;
UI_UpStairs.URL = "ui://n1eyqnayxz9qh0";
},{}],64:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_character extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "character"));
    }
    onConstruct() {
        this.m_type = this.getControllerAt(0);
        this.m_front = this.getTransitionAt(0);
        this.m_back = this.getTransitionAt(1);
        this.m_left = this.getTransitionAt(2);
        this.m_right = this.getTransitionAt(3);
    }
}
exports.default = UI_character;
UI_character.URL = "ui://n1eyqnayh7ng11";
},{}],65:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_door_blue extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "door_blue"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_door_blue;
UI_door_blue.URL = "ui://n1eyqnaybhkz2s";
},{}],66:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_door_red extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "door_red"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_door_red;
UI_door_red.URL = "ui://n1eyqnaybhkz2t";
},{}],67:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_door_yellow extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "door_yellow"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_door_yellow;
UI_door_yellow.URL = "ui://n1eyqnaybhkz2r";
},{}],68:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
class UI_fairy extends fgui.GComponent {
    static createInstance() {
        return (fgui.UIPackage.createObject("Main", "fairy"));
    }
    onConstruct() {
        this.m_common = this.getTransitionAt(0);
    }
}
exports.default = UI_fairy;
UI_fairy.URL = "ui://n1eyqnayh7ng1y";
},{}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var game;
    (function (game) {
        class explainUI extends Laya.Scene {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.loadScene("game/explain");
            }
        }
        game.explainUI = explainUI;
        REG("ui.game.explainUI", explainUI);
        class gameUI extends Laya.Scene {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.loadScene("game/game");
            }
        }
        game.gameUI = gameUI;
        REG("ui.game.gameUI", gameUI);
        class homeUI extends Laya.Scene {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.loadScene("game/home");
            }
        }
        game.homeUI = homeUI;
        REG("ui.game.homeUI", homeUI);
        class transitionUI extends Laya.View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.loadScene("game/transition");
            }
        }
        game.transitionUI = transitionUI;
        REG("ui.game.transitionUI", transitionUI);
    })(game = ui.game || (ui.game = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
